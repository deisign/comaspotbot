from telegram import Update, Bot
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import os
import spotipy
from spotipy.oauth2 import SpotifyOAuth
from datetime import datetime, timedelta
import json
import asyncio

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
SPOTIFY_CLIENT_ID = os.getenv("SPOTIFY_CLIENT_ID")
SPOTIFY_CLIENT_SECRET = os.getenv("SPOTIFY_CLIENT_SECRET")
SPOTIFY_REFRESH_TOKEN = os.getenv("SPOTIFY_REFRESH_TOKEN")
TELEGRAM_CHANNEL_ID = os.getenv("TELEGRAM_CHANNEL_ID")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å https://comaspotbot-production.up.railway.app

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Spotify API —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Refresh Token
sp_oauth = SpotifyOAuth(
    client_id=SPOTIFY_CLIENT_ID,
    client_secret=SPOTIFY_CLIENT_SECRET,
    redirect_uri="https://spotify-refresh-token-generator.netlify.app",
    scope="user-follow-read",
    open_browser=False
)
sp_oauth.refresh_access_token(SPOTIFY_REFRESH_TOKEN)
sp = spotipy.Spotify(auth_manager=sp_oauth)

# Telegram –±–æ—Ç
bot = Bot(token=BOT_TOKEN)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–±–æ—Ç–∞—é —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫–∏!")

# –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ /test
async def test(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        await bot.send_message(chat_id=TELEGRAM_CHANNEL_ID, text="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        await update.message.reply_text("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª!")
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞: {e}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Ä–µ–ª–∏–∑–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∫–∞–Ω–∞–ª
async def check_and_notify():
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ä–µ–ª–∏–∑—ã
        sent_releases = load_sent_releases()

        # –í—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—É 7 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
        today = datetime.now()
        seven_days_ago = today - timedelta(days=7)

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤
        artists = sp.current_user_followed_artists(limit=50)["artists"]["items"]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Ä–µ–ª–∏–∑—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä—Ç–∏—Å—Ç–∞
        for artist in artists:
            artist_name = artist["name"]
            artist_id = artist["id"]

            # –ü–æ–ª—É—á–∞–µ–º –∞–ª—å–±–æ–º—ã –∏ —Å–∏–Ω–≥–ª—ã –∞—Ä—Ç–∏—Å—Ç–∞
            albums = sp.artist_albums(artist_id, album_type="album,single", limit=5)["items"]

            for album in albums:
                release_date = album["release_date"]
                album_name = album["name"]
                album_url = album["external_urls"]["spotify"]
                album_id = album["id"]

                # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É —Ä–µ–ª–∏–∑–∞
                try:
                    release_date_obj = datetime.strptime(release_date, "%Y-%m-%d")
                except ValueError:
                    continue

                # –ï—Å–ª–∏ —Ä–µ–ª–∏–∑ –Ω–æ–≤—ã–π –∏ –µ—â—ë –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª—Å—è
                if seven_days_ago <= release_date_obj <= today and album_id not in sent_releases:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
                    message = f"üéµ –ù–æ–≤—ã–π —Ä–µ–ª–∏–∑ –æ—Ç {artist_name}!\n\n{album_name} ({release_date})\n\n–°–ª—É—à–∞–π—Ç–µ: {album_url}"
                    await bot.send_message(chat_id=TELEGRAM_CHANNEL_ID, text=message)

                    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ª–∏–∑ –≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ
                    sent_releases[album_id] = True

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ä–µ–ª–∏–∑–æ–≤
        save_sent_releases(sent_releases)

    except Exception as e:
        await bot.send_message(chat_id=TELEGRAM_CHANNEL_ID, text=f"–û—à–∏–±–∫–∞: {e}")

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ä–µ–ª–∏–∑–∞—Ö
def load_sent_releases():
    if os.path.exists("sent_releases.json"):
        with open("sent_releases.json", "r") as file:
            return json.load(file)
    return {}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ä–µ–ª–∏–∑–æ–≤
def save_sent_releases(sent_releases):
    with open("sent_releases.json", "w") as file:
        json.dump(sent_releases, file)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def main():
    application = ApplicationBuilder().token(BOT_TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("test", test))

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–æ–≤
    application.run_webhook(
        listen="0.0.0.0",
        port=int(os.getenv("PORT", 8443)),
        webhook_url=WEBHOOK_URL
    )

if __name__ == "__main__":
    main()
